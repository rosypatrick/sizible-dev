{"ast":null,"code":"/**\n * MeasurementInput Component\n * \n * A component for inputting body measurements with a slider and numeric input.\n * This component follows Sizible's brand guidelines and provides a user-friendly\n * interface for entering measurements like bust, waist, and hips.\n */import React,{useState,useEffect}from'react';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MeasurementContainer=styled.div`\n  margin-bottom: ${props=>props.theme.spacing.medium};\n`;const Label=styled.label`\n  display: block;\n  margin-bottom: ${props=>props.theme.spacing.small};\n  font-weight: ${props=>props.theme.typography.fontWeight.medium};\n`;const InputGroup=styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${props=>props.theme.spacing.medium};\n`;const NumberInput=styled.input`\n  width: 70px;\n  text-align: center;\n  padding: ${props=>props.theme.spacing.small};\n  border: 1px solid #ddd;\n  border-radius: ${props=>props.theme.borderRadius.small};\n  font-family: ${props=>props.theme.typography.fontFamily.primary};\n  font-size: ${props=>props.theme.typography.fontSize.medium};\n  \n  &:focus {\n    outline: none;\n    border-color: ${props=>props.theme.colors.primary};\n  }\n`;const SliderContainer=styled.div`\n  position: relative;\n  flex: 1;\n  height: 40px;\n`;const Ruler=styled.div`\n  position: relative;\n  width: 100%;\n  height: 20px;\n  background: #f8f9fa;\n  border-radius: ${props=>props.theme.borderRadius.small};\n`;const RulerMarks=styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 100%;\n  display: flex;\n  align-items: flex-end;\n`;const Mark=styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 1px;\n  background-color: #aaa;\n  height: ${props=>props.isMajor?'10px':'6px'};\n  left: ${props=>props.position}%;\n`;const MarkLabel=styled.div`\n  position: absolute;\n  bottom: -16px;\n  font-size: 9px;\n  transform: translateX(-50%);\n  left: ${props=>props.position}%;\n  color: #666;\n`;const Slider=styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 20px;\n  -webkit-appearance: none;\n  background: transparent;\n  outline: none;\n  \n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: ${props=>props.theme.colors.primary};\n    cursor: pointer;\n    border: 2px solid white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    position: relative;\n    z-index: 2;\n  }\n  \n  &::-moz-range-thumb {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: ${props=>props.theme.colors.primary};\n    cursor: pointer;\n    border: 2px solid white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    position: relative;\n    z-index: 2;\n  }\n`;const SliderTrack=styled.div`\n  position: absolute;\n  top: 9px;\n  left: 0;\n  right: 0;\n  height: 2px;\n  background: #ddd;\n  z-index: 1;\n`;/**\n * MeasurementInput component\n * \n * @param {Object} props - Component props\n * @param {string} props.label - Label for the measurement (e.g., \"Bust\", \"Waist\")\n * @param {number} props.value - Current measurement value\n * @param {function} props.onChange - Function to call when measurement changes\n * @param {number} props.min - Minimum value for the slider\n * @param {number} props.max - Maximum value for the slider\n * @returns {JSX.Element} Measurement input component\n */const MeasurementInput=_ref=>{let{label,value,onChange,min=50,max=150}=_ref;const[localValue,setLocalValue]=useState(value);useEffect(()=>{setLocalValue(value);},[value]);const handleSliderChange=e=>{const newValue=parseInt(e.target.value,10);setLocalValue(newValue);onChange(newValue);};const handleInputChange=e=>{let newValue=parseInt(e.target.value,10);if(isNaN(newValue)){newValue=min;}else if(newValue<min){newValue=min;}else if(newValue>max){newValue=max;}setLocalValue(newValue);onChange(newValue);};// Generate ruler marks\nconst renderMarks=()=>{const marks=[];const step=5;// 5cm steps\nconst majorStep=10;// 10cm for major marks\nfor(let i=min;i<=max;i+=step){const position=(i-min)/(max-min)*100;const isMajor=i%majorStep===0;marks.push(/*#__PURE__*/_jsx(Mark,{position:position,isMajor:isMajor},`mark-${i}`));if(isMajor){marks.push(/*#__PURE__*/_jsx(MarkLabel,{position:position,children:i},`label-${i}`));}}return marks;};return/*#__PURE__*/_jsxs(MeasurementContainer,{children:[/*#__PURE__*/_jsxs(Label,{htmlFor:`${label.toLowerCase()}-input`,children:[label,\" (cm)\"]}),/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(NumberInput,{id:`${label.toLowerCase()}-input`,type:\"number\",value:localValue,onChange:handleInputChange,min:min,max:max}),/*#__PURE__*/_jsxs(SliderContainer,{children:[/*#__PURE__*/_jsx(SliderTrack,{}),/*#__PURE__*/_jsx(Slider,{type:\"range\",min:min,max:max,value:localValue,onChange:handleSliderChange}),/*#__PURE__*/_jsx(Ruler,{children:/*#__PURE__*/_jsx(RulerMarks,{children:renderMarks()})})]})]})]});};export default MeasurementInput;","map":{"version":3,"names":["React","useState","useEffect","styled","jsx","_jsx","jsxs","_jsxs","MeasurementContainer","div","props","theme","spacing","medium","Label","label","small","typography","fontWeight","InputGroup","NumberInput","input","borderRadius","fontFamily","primary","fontSize","colors","SliderContainer","Ruler","RulerMarks","Mark","isMajor","position","MarkLabel","Slider","SliderTrack","MeasurementInput","_ref","value","onChange","min","max","localValue","setLocalValue","handleSliderChange","e","newValue","parseInt","target","handleInputChange","isNaN","renderMarks","marks","step","majorStep","i","push","children","htmlFor","toLowerCase","id","type"],"sources":["C:/sophia/windsurf/sizible-dev/frontend/src/components/consumer/MeasurementInput.js"],"sourcesContent":["/**\n * MeasurementInput Component\n * \n * A component for inputting body measurements with a slider and numeric input.\n * This component follows Sizible's brand guidelines and provides a user-friendly\n * interface for entering measurements like bust, waist, and hips.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst MeasurementContainer = styled.div`\n  margin-bottom: ${props => props.theme.spacing.medium};\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: ${props => props.theme.spacing.small};\n  font-weight: ${props => props.theme.typography.fontWeight.medium};\n`;\n\nconst InputGroup = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${props => props.theme.spacing.medium};\n`;\n\nconst NumberInput = styled.input`\n  width: 70px;\n  text-align: center;\n  padding: ${props => props.theme.spacing.small};\n  border: 1px solid #ddd;\n  border-radius: ${props => props.theme.borderRadius.small};\n  font-family: ${props => props.theme.typography.fontFamily.primary};\n  font-size: ${props => props.theme.typography.fontSize.medium};\n  \n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst SliderContainer = styled.div`\n  position: relative;\n  flex: 1;\n  height: 40px;\n`;\n\nconst Ruler = styled.div`\n  position: relative;\n  width: 100%;\n  height: 20px;\n  background: #f8f9fa;\n  border-radius: ${props => props.theme.borderRadius.small};\n`;\n\nconst RulerMarks = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 100%;\n  display: flex;\n  align-items: flex-end;\n`;\n\nconst Mark = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 1px;\n  background-color: #aaa;\n  height: ${props => (props.isMajor ? '10px' : '6px')};\n  left: ${props => props.position}%;\n`;\n\nconst MarkLabel = styled.div`\n  position: absolute;\n  bottom: -16px;\n  font-size: 9px;\n  transform: translateX(-50%);\n  left: ${props => props.position}%;\n  color: #666;\n`;\n\nconst Slider = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 20px;\n  -webkit-appearance: none;\n  background: transparent;\n  outline: none;\n  \n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: ${props => props.theme.colors.primary};\n    cursor: pointer;\n    border: 2px solid white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    position: relative;\n    z-index: 2;\n  }\n  \n  &::-moz-range-thumb {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: ${props => props.theme.colors.primary};\n    cursor: pointer;\n    border: 2px solid white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    position: relative;\n    z-index: 2;\n  }\n`;\n\nconst SliderTrack = styled.div`\n  position: absolute;\n  top: 9px;\n  left: 0;\n  right: 0;\n  height: 2px;\n  background: #ddd;\n  z-index: 1;\n`;\n\n/**\n * MeasurementInput component\n * \n * @param {Object} props - Component props\n * @param {string} props.label - Label for the measurement (e.g., \"Bust\", \"Waist\")\n * @param {number} props.value - Current measurement value\n * @param {function} props.onChange - Function to call when measurement changes\n * @param {number} props.min - Minimum value for the slider\n * @param {number} props.max - Maximum value for the slider\n * @returns {JSX.Element} Measurement input component\n */\nconst MeasurementInput = ({ \n  label, \n  value, \n  onChange,\n  min = 50,\n  max = 150\n}) => {\n  const [localValue, setLocalValue] = useState(value);\n  \n  useEffect(() => {\n    setLocalValue(value);\n  }, [value]);\n\n  const handleSliderChange = (e) => {\n    const newValue = parseInt(e.target.value, 10);\n    setLocalValue(newValue);\n    onChange(newValue);\n  };\n\n  const handleInputChange = (e) => {\n    let newValue = parseInt(e.target.value, 10);\n    if (isNaN(newValue)) {\n      newValue = min;\n    } else if (newValue < min) {\n      newValue = min;\n    } else if (newValue > max) {\n      newValue = max;\n    }\n    setLocalValue(newValue);\n    onChange(newValue);\n  };\n\n  // Generate ruler marks\n  const renderMarks = () => {\n    const marks = [];\n    const step = 5; // 5cm steps\n    const majorStep = 10; // 10cm for major marks\n    \n    for (let i = min; i <= max; i += step) {\n      const position = ((i - min) / (max - min)) * 100;\n      const isMajor = i % majorStep === 0;\n      \n      marks.push(\n        <Mark key={`mark-${i}`} position={position} isMajor={isMajor} />\n      );\n      \n      if (isMajor) {\n        marks.push(\n          <MarkLabel key={`label-${i}`} position={position}>\n            {i}\n          </MarkLabel>\n        );\n      }\n    }\n    \n    return marks;\n  };\n\n  return (\n    <MeasurementContainer>\n      <Label htmlFor={`${label.toLowerCase()}-input`}>{label} (cm)</Label>\n      <InputGroup>\n        <NumberInput\n          id={`${label.toLowerCase()}-input`}\n          type=\"number\"\n          value={localValue}\n          onChange={handleInputChange}\n          min={min}\n          max={max}\n        />\n        \n        <SliderContainer>\n          <SliderTrack />\n          <Slider\n            type=\"range\"\n            min={min}\n            max={max}\n            value={localValue}\n            onChange={handleSliderChange}\n          />\n          <Ruler>\n            <RulerMarks>\n              {renderMarks()}\n            </RulerMarks>\n          </Ruler>\n        </SliderContainer>\n      </InputGroup>\n    </MeasurementContainer>\n  );\n};\n\nexport default MeasurementInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}