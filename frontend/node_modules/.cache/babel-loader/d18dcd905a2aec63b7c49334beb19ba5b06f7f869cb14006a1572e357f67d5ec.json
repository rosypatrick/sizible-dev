{"ast":null,"code":"/**\n * Excel Upload Page\n * \n * This page allows admin users to upload Excel files containing product data.\n * It handles file validation, upload, and displays processing status.\n */import React,{useState,useEffect,useRef}from'react';import{useNavigate}from'react-router-dom';import styled from'styled-components';import SizibleNavigation from'../../components/common/SizibleNavigation';import SizibleButton from'../../components/common/SizibleButton';import SizibleCard from'../../components/common/SizibleCard';// Styled components\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PageContainer=styled.div`\n  padding: ${props=>props.theme.spacing.large};\n  max-width: 1200px;\n  margin: 0 auto;\n`;const PageHeader=styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${props=>props.theme.spacing.large};\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: ${props=>props.theme.spacing.medium};\n  }\n`;const UploadArea=styled.div`\n  border: 2px dashed ${props=>props.isDragging?props.theme.colors.primary:'#ddd'};\n  border-radius: ${props=>props.theme.borderRadius.medium};\n  padding: ${props=>props.theme.spacing.xlarge};\n  text-align: center;\n  margin-bottom: ${props=>props.theme.spacing.large};\n  transition: all 0.3s ease;\n  background-color: ${props=>props.isDragging?'rgba(0, 123, 255, 0.05)':'transparent'};\n  cursor: pointer;\n`;const UploadIcon=styled.div`\n  font-size: 3rem;\n  margin-bottom: ${props=>props.theme.spacing.medium};\n  color: ${props=>props.theme.colors.primary};\n`;const FileInput=styled.input`\n  display: none;\n`;const ProgressContainer=styled.div`\n  margin: ${props=>props.theme.spacing.large} 0;\n`;const ProgressBar=styled.div`\n  height: 10px;\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  margin-top: ${props=>props.theme.spacing.small};\n  overflow: hidden;\n`;const ProgressFill=styled.div`\n  height: 100%;\n  width: ${props=>props.progress}%;\n  background-color: ${props=>props.theme.colors.primary};\n  transition: width 0.3s ease;\n`;const StatusMessage=styled.div`\n  padding: ${props=>props.theme.spacing.medium};\n  border-radius: ${props=>props.theme.borderRadius.small};\n  margin: ${props=>props.theme.spacing.medium} 0;\n  background-color: ${props=>{switch(props.type){case'success':return'rgba(40, 167, 69, 0.1)';case'error':return'rgba(220, 53, 69, 0.1)';case'info':return'rgba(0, 123, 255, 0.1)';default:return'transparent';}}};\n  color: ${props=>{switch(props.type){case'success':return'#28a745';case'error':return'#dc3545';case'info':return'#007bff';default:return'inherit';}}};\n  border-left: 4px solid ${props=>{switch(props.type){case'success':return'#28a745';case'error':return'#dc3545';case'info':return'#007bff';default:return'transparent';}}};\n`;const UploadHistoryCard=styled(SizibleCard)`\n  margin-top: ${props=>props.theme.spacing.xlarge};\n`;const HistoryTable=styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  \n  th, td {\n    padding: ${props=>props.theme.spacing.small};\n    text-align: left;\n    border-bottom: 1px solid #eee;\n  }\n  \n  th {\n    font-weight: ${props=>props.theme.typography.fontWeight.medium};\n  }\n`;const StatusBadge=styled.span`\n  display: inline-block;\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 0.8rem;\n  background-color: ${props=>{switch(props.status){case'success':return'rgba(40, 167, 69, 0.1)';case'failed':return'rgba(220, 53, 69, 0.1)';case'processing':return'rgba(255, 193, 7, 0.1)';default:return'rgba(0, 123, 255, 0.1)';}}};\n  color: ${props=>{switch(props.status){case'success':return'#28a745';case'failed':return'#dc3545';case'processing':return'#ffc107';default:return'#007bff';}}};\n`;/**\n * Excel Upload Page Component\n * \n * @returns {JSX.Element} The Excel upload page component\n */const ExcelUploadPage=()=>{const navigate=useNavigate();const fileInputRef=useRef(null);const[isDragging,setIsDragging]=useState(false);const[selectedFile,setSelectedFile]=useState(null);const[uploadProgress,setUploadProgress]=useState(0);const[uploadStatus,setUploadStatus]=useState(null);const[isUploading,setIsUploading]=useState(false);const[uploadHistory,setUploadHistory]=useState([]);// Fetch upload history from the backend\nconst fetchUploadHistory=async()=>{try{const response=await fetch('http://localhost:5000/api/admin/upload-history');if(response.ok){const data=await response.json();if(data.history&&Array.isArray(data.history)){// Transform the data to match our frontend format\nconst formattedHistory=data.history.map(item=>({id:item.id,filename:item.filename,timestamp:new Date(item.created_at).toLocaleString(),status:item.success_count>0?'success':'failed',records:item.success_count||0}));setUploadHistory(formattedHistory);}}else{console.error('Failed to fetch upload history');// Fallback to sample data if API fails\nsetUploadHistory([{id:1,filename:'products_march_2025.xlsx',timestamp:'2025-03-15 14:32',status:'success',records:124},{id:2,filename:'products_feb_2025.xlsx',timestamp:'2025-02-22 09:15',status:'success',records:98},{id:3,filename:'test_upload.xlsx',timestamp:'2025-02-10 16:45',status:'failed',records:0}]);}}catch(error){console.error('Error fetching upload history:',error);// Fallback to sample data if API fails\nsetUploadHistory([{id:1,filename:'products_march_2025.xlsx',timestamp:'2025-03-15 14:32',status:'success',records:124},{id:2,filename:'products_feb_2025.xlsx',timestamp:'2025-02-22 09:15',status:'success',records:98},{id:3,filename:'test_upload.xlsx',timestamp:'2025-02-10 16:45',status:'failed',records:0}]);}};// Check if admin is authenticated\nuseEffect(()=>{const isAuthenticated=localStorage.getItem('adminAuthenticated')==='true';if(!isAuthenticated){navigate('/admin/login');}fetchUploadHistory();},[navigate]);// Handle drag events\nconst handleDragOver=e=>{e.preventDefault();setIsDragging(true);};const handleDragLeave=()=>{setIsDragging(false);};const handleDrop=e=>{e.preventDefault();setIsDragging(false);const files=e.dataTransfer.files;if(files.length>0){handleFileSelect(files[0]);}};// Handle file selection\nconst handleFileSelect=file=>{// Check if file is an Excel file\nif(file&&(file.type==='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'||file.type==='application/vnd.ms-excel')){setSelectedFile(file);setUploadStatus({type:'info',message:`File \"${file.name}\" selected and ready for upload.`});}else{setSelectedFile(null);setUploadStatus({type:'error',message:'Please select a valid Excel file (.xlsx or .xls).'});}};// Handle file input change\nconst handleFileInputChange=e=>{if(e.target.files.length>0){handleFileSelect(e.target.files[0]);}};// Handle upload button click\nconst handleUploadClick=()=>{fileInputRef.current.click();};// Handle file upload\nconst handleUpload=async()=>{if(!selectedFile){setUploadStatus({type:'error',message:'Please select a file to upload.'});return;}setIsUploading(true);setUploadProgress(0);setUploadStatus({type:'info',message:'Uploading file...'});// Use XMLHttpRequest for better progress tracking\nconst xhr=new XMLHttpRequest();const formData=new FormData();formData.append('file',selectedFile);xhr.upload.onprogress=event=>{if(event.lengthComputable){const progress=Math.round(event.loaded/event.total*100);setUploadProgress(progress);}};xhr.onload=async()=>{try{// Add a timeout to prevent hanging at 100%\nsetTimeout(()=>{setIsUploading(false);},10000);// 10 second timeout as a fallback\nlet result;try{result=JSON.parse(xhr.responseText);}catch(parseError){console.error('Error parsing response:',parseError,'Response:',xhr.responseText);setUploadStatus({type:'error',message:'Error processing server response. Check console for details.'});setIsUploading(false);return;}if(xhr.status===200){var _result$result;setUploadStatus({type:'success',message:result.message||`File uploaded and processed successfully. ${((_result$result=result.result)===null||_result$result===void 0?void 0:_result$result.success)||0} records updated.`});setSelectedFile(null);// Add to upload history\nconst now=new Date();const timestamp=`${now.getFullYear()}-${String(now.getMonth()+1).padStart(2,'0')}-${String(now.getDate()).padStart(2,'0')} ${String(now.getHours()).padStart(2,'0')}:${String(now.getMinutes()).padStart(2,'0')}`;setUploadHistory(prevHistory=>{var _result$result2;return[{id:prevHistory.length+1,filename:selectedFile.name,timestamp,status:'success',records:((_result$result2=result.result)===null||_result$result2===void 0?void 0:_result$result2.total)||0},...prevHistory];});// Fetch updated history\nfetchUploadHistory();}else{setUploadStatus({type:'error',message:result.error||'Failed to upload or process file.'});setUploadHistory(prevHistory=>[{id:prevHistory.length+1,filename:selectedFile.name,timestamp:new Date().toISOString().slice(0,16).replace('T',' '),status:'failed',records:0},...prevHistory]);}}catch(err){console.error('Error handling response:',err);setUploadStatus({type:'error',message:'Error processing server response. Check console for details.'});}finally{setIsUploading(false);}};xhr.onerror=()=>{setUploadStatus({type:'error',message:'Network error occurred during upload.'});setIsUploading(false);};// Use the full URL with port to ensure it reaches the backend\nxhr.open('POST','http://localhost:5000/api/admin/upload-excel',true);xhr.send(formData);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(SizibleNavigation,{}),/*#__PURE__*/_jsxs(PageContainer,{children:[/*#__PURE__*/_jsxs(PageHeader,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Excel Upload\"}),/*#__PURE__*/_jsx(SizibleButton,{as:\"a\",href:\"/admin/dashboard\",variant:\"secondary\",children:\"Back to Dashboard\"})]}),/*#__PURE__*/_jsxs(SizibleCard,{elevated:true,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Upload Product Data\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Upload an Excel file containing product data. The system will process the file and update the database accordingly.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"The Excel file should contain the following columns: FE_Item_Code, Name, Brand, Type, Size, Color, etc.\"}),/*#__PURE__*/_jsxs(UploadArea,{isDragging:isDragging,onDragOver:handleDragOver,onDragLeave:handleDragLeave,onDrop:handleDrop,onClick:handleUploadClick,children:[/*#__PURE__*/_jsx(UploadIcon,{children:\"\\uD83D\\uDCC4\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Drag & Drop Excel File Here\"}),/*#__PURE__*/_jsx(\"p\",{children:\"or click to browse files\"}),/*#__PURE__*/_jsx(FileInput,{type:\"file\",ref:fileInputRef,accept:\".xlsx,.xls\",onChange:handleFileInputChange}),selectedFile&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Selected file:\"}),\" \",selectedFile.name]})]}),uploadStatus&&/*#__PURE__*/_jsx(StatusMessage,{type:uploadStatus.type,children:uploadStatus.message}),isUploading&&/*#__PURE__*/_jsxs(ProgressContainer,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Uploading: \",uploadProgress,\"%\"]}),/*#__PURE__*/_jsx(ProgressBar,{children:/*#__PURE__*/_jsx(ProgressFill,{progress:uploadProgress})})]}),/*#__PURE__*/_jsx(SizibleButton,{onClick:handleUpload,disabled:!selectedFile||isUploading,style:{marginTop:'20px'},children:isUploading?'Processing...':'Upload File'})]}),/*#__PURE__*/_jsxs(UploadHistoryCard,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Upload History\"}),uploadHistory.length>0?/*#__PURE__*/_jsxs(HistoryTable,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Filename\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date & Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Records Updated\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:uploadHistory.map(upload=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:upload.filename}),/*#__PURE__*/_jsx(\"td\",{children:upload.timestamp}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(StatusBadge,{status:upload.status,children:upload.status.charAt(0).toUpperCase()+upload.status.slice(1)})}),/*#__PURE__*/_jsx(\"td\",{children:upload.records})]},upload.id))})]}):/*#__PURE__*/_jsx(\"p\",{children:\"No upload history available.\"})]})]})]});};export default ExcelUploadPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","styled","SizibleNavigation","SizibleButton","SizibleCard","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PageContainer","div","props","theme","spacing","large","PageHeader","medium","UploadArea","isDragging","colors","primary","borderRadius","xlarge","UploadIcon","FileInput","input","ProgressContainer","ProgressBar","small","ProgressFill","progress","StatusMessage","type","UploadHistoryCard","HistoryTable","table","typography","fontWeight","StatusBadge","span","status","ExcelUploadPage","navigate","fileInputRef","setIsDragging","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","isUploading","setIsUploading","uploadHistory","setUploadHistory","fetchUploadHistory","response","fetch","ok","data","json","history","Array","isArray","formattedHistory","map","item","id","filename","timestamp","Date","created_at","toLocaleString","success_count","records","console","error","isAuthenticated","localStorage","getItem","handleDragOver","e","preventDefault","handleDragLeave","handleDrop","files","dataTransfer","length","handleFileSelect","file","message","name","handleFileInputChange","target","handleUploadClick","current","click","handleUpload","xhr","XMLHttpRequest","formData","FormData","append","upload","onprogress","event","lengthComputable","Math","round","loaded","total","onload","setTimeout","result","JSON","parse","responseText","parseError","_result$result","success","now","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","prevHistory","_result$result2","toISOString","slice","replace","err","onerror","open","send","children","as","href","variant","elevated","onDragOver","onDragLeave","onDrop","onClick","ref","accept","onChange","disabled","style","marginTop","charAt","toUpperCase"],"sources":["C:/sophia/windsurf/sizible-dev/frontend/src/pages/admin/ExcelUploadPage.js"],"sourcesContent":["/**\n * Excel Upload Page\n * \n * This page allows admin users to upload Excel files containing product data.\n * It handles file validation, upload, and displays processing status.\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport SizibleNavigation from '../../components/common/SizibleNavigation';\nimport SizibleButton from '../../components/common/SizibleButton';\nimport SizibleCard from '../../components/common/SizibleCard';\n\n// Styled components\nconst PageContainer = styled.div`\n  padding: ${props => props.theme.spacing.large};\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst PageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${props => props.theme.spacing.large};\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: ${props => props.theme.spacing.medium};\n  }\n`;\n\nconst UploadArea = styled.div`\n  border: 2px dashed ${props => props.isDragging ? props.theme.colors.primary : '#ddd'};\n  border-radius: ${props => props.theme.borderRadius.medium};\n  padding: ${props => props.theme.spacing.xlarge};\n  text-align: center;\n  margin-bottom: ${props => props.theme.spacing.large};\n  transition: all 0.3s ease;\n  background-color: ${props => props.isDragging ? 'rgba(0, 123, 255, 0.05)' : 'transparent'};\n  cursor: pointer;\n`;\n\nconst UploadIcon = styled.div`\n  font-size: 3rem;\n  margin-bottom: ${props => props.theme.spacing.medium};\n  color: ${props => props.theme.colors.primary};\n`;\n\nconst FileInput = styled.input`\n  display: none;\n`;\n\nconst ProgressContainer = styled.div`\n  margin: ${props => props.theme.spacing.large} 0;\n`;\n\nconst ProgressBar = styled.div`\n  height: 10px;\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  margin-top: ${props => props.theme.spacing.small};\n  overflow: hidden;\n`;\n\nconst ProgressFill = styled.div`\n  height: 100%;\n  width: ${props => props.progress}%;\n  background-color: ${props => props.theme.colors.primary};\n  transition: width 0.3s ease;\n`;\n\nconst StatusMessage = styled.div`\n  padding: ${props => props.theme.spacing.medium};\n  border-radius: ${props => props.theme.borderRadius.small};\n  margin: ${props => props.theme.spacing.medium} 0;\n  background-color: ${props => {\n    switch(props.type) {\n      case 'success': return 'rgba(40, 167, 69, 0.1)';\n      case 'error': return 'rgba(220, 53, 69, 0.1)';\n      case 'info': return 'rgba(0, 123, 255, 0.1)';\n      default: return 'transparent';\n    }\n  }};\n  color: ${props => {\n    switch(props.type) {\n      case 'success': return '#28a745';\n      case 'error': return '#dc3545';\n      case 'info': return '#007bff';\n      default: return 'inherit';\n    }\n  }};\n  border-left: 4px solid ${props => {\n    switch(props.type) {\n      case 'success': return '#28a745';\n      case 'error': return '#dc3545';\n      case 'info': return '#007bff';\n      default: return 'transparent';\n    }\n  }};\n`;\n\nconst UploadHistoryCard = styled(SizibleCard)`\n  margin-top: ${props => props.theme.spacing.xlarge};\n`;\n\nconst HistoryTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  \n  th, td {\n    padding: ${props => props.theme.spacing.small};\n    text-align: left;\n    border-bottom: 1px solid #eee;\n  }\n  \n  th {\n    font-weight: ${props => props.theme.typography.fontWeight.medium};\n  }\n`;\n\nconst StatusBadge = styled.span`\n  display: inline-block;\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 0.8rem;\n  background-color: ${props => {\n    switch(props.status) {\n      case 'success': return 'rgba(40, 167, 69, 0.1)';\n      case 'failed': return 'rgba(220, 53, 69, 0.1)';\n      case 'processing': return 'rgba(255, 193, 7, 0.1)';\n      default: return 'rgba(0, 123, 255, 0.1)';\n    }\n  }};\n  color: ${props => {\n    switch(props.status) {\n      case 'success': return '#28a745';\n      case 'failed': return '#dc3545';\n      case 'processing': return '#ffc107';\n      default: return '#007bff';\n    }\n  }};\n`;\n\n/**\n * Excel Upload Page Component\n * \n * @returns {JSX.Element} The Excel upload page component\n */\nconst ExcelUploadPage = () => {\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadHistory, setUploadHistory] = useState([]);\n  \n  // Fetch upload history from the backend\n  const fetchUploadHistory = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/admin/upload-history');\n      if (response.ok) {\n        const data = await response.json();\n        if (data.history && Array.isArray(data.history)) {\n          // Transform the data to match our frontend format\n          const formattedHistory = data.history.map(item => ({\n            id: item.id,\n            filename: item.filename,\n            timestamp: new Date(item.created_at).toLocaleString(),\n            status: item.success_count > 0 ? 'success' : 'failed',\n            records: item.success_count || 0\n          }));\n          setUploadHistory(formattedHistory);\n        }\n      } else {\n        console.error('Failed to fetch upload history');\n        // Fallback to sample data if API fails\n        setUploadHistory([\n          { id: 1, filename: 'products_march_2025.xlsx', timestamp: '2025-03-15 14:32', status: 'success', records: 124 },\n          { id: 2, filename: 'products_feb_2025.xlsx', timestamp: '2025-02-22 09:15', status: 'success', records: 98 },\n          { id: 3, filename: 'test_upload.xlsx', timestamp: '2025-02-10 16:45', status: 'failed', records: 0 }\n        ]);\n      }\n    } catch (error) {\n      console.error('Error fetching upload history:', error);\n      // Fallback to sample data if API fails\n      setUploadHistory([\n        { id: 1, filename: 'products_march_2025.xlsx', timestamp: '2025-03-15 14:32', status: 'success', records: 124 },\n        { id: 2, filename: 'products_feb_2025.xlsx', timestamp: '2025-02-22 09:15', status: 'success', records: 98 },\n        { id: 3, filename: 'test_upload.xlsx', timestamp: '2025-02-10 16:45', status: 'failed', records: 0 }\n      ]);\n    }\n  };\n\n  // Check if admin is authenticated\n  useEffect(() => {\n    const isAuthenticated = localStorage.getItem('adminAuthenticated') === 'true';\n    if (!isAuthenticated) {\n      navigate('/admin/login');\n    }\n    \n    fetchUploadHistory();\n  }, [navigate]);\n  \n  // Handle drag events\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  \n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n  \n  const handleDrop = (e) => {\n    e.preventDefault();\n    setIsDragging(false);\n    \n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileSelect(files[0]);\n    }\n  };\n  \n  // Handle file selection\n  const handleFileSelect = (file) => {\n    // Check if file is an Excel file\n    if (file && (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || \n                file.type === 'application/vnd.ms-excel')) {\n      setSelectedFile(file);\n      setUploadStatus({ type: 'info', message: `File \"${file.name}\" selected and ready for upload.` });\n    } else {\n      setSelectedFile(null);\n      setUploadStatus({ type: 'error', message: 'Please select a valid Excel file (.xlsx or .xls).' });\n    }\n  };\n  \n  // Handle file input change\n  const handleFileInputChange = (e) => {\n    if (e.target.files.length > 0) {\n      handleFileSelect(e.target.files[0]);\n    }\n  };\n  \n  // Handle upload button click\n  const handleUploadClick = () => {\n    fileInputRef.current.click();\n  };\n  \n  // Handle file upload\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setUploadStatus({ type: 'error', message: 'Please select a file to upload.' });\n      return;\n    }\n\n    setIsUploading(true);\n    setUploadProgress(0);\n    setUploadStatus({ type: 'info', message: 'Uploading file...' });\n\n    // Use XMLHttpRequest for better progress tracking\n    const xhr = new XMLHttpRequest();\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n    xhr.upload.onprogress = (event) => {\n      if (event.lengthComputable) {\n        const progress = Math.round((event.loaded / event.total) * 100);\n        setUploadProgress(progress);\n      }\n    };\n\n    xhr.onload = async () => {\n      try {\n        // Add a timeout to prevent hanging at 100%\n        setTimeout(() => {\n          setIsUploading(false);\n        }, 10000); // 10 second timeout as a fallback\n        \n        let result;\n        try {\n          result = JSON.parse(xhr.responseText);\n        } catch (parseError) {\n          console.error('Error parsing response:', parseError, 'Response:', xhr.responseText);\n          setUploadStatus({ type: 'error', message: 'Error processing server response. Check console for details.' });\n          setIsUploading(false);\n          return;\n        }\n        \n        if (xhr.status === 200) {\n          setUploadStatus({ \n            type: 'success', \n            message: result.message || `File uploaded and processed successfully. ${result.result?.success || 0} records updated.` \n          });\n          setSelectedFile(null);\n          \n          // Add to upload history\n          const now = new Date();\n          const timestamp = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')} ${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`;\n          \n          setUploadHistory(prevHistory => [\n            {\n              id: prevHistory.length + 1,\n              filename: selectedFile.name,\n              timestamp,\n              status: 'success',\n              records: result.result?.total || 0\n            },\n            ...prevHistory\n          ]);\n          \n          // Fetch updated history\n          fetchUploadHistory();\n        } else {\n          setUploadStatus({ type: 'error', message: result.error || 'Failed to upload or process file.' });\n          setUploadHistory(prevHistory => [\n            {\n              id: prevHistory.length + 1,\n              filename: selectedFile.name,\n              timestamp: new Date().toISOString().slice(0, 16).replace('T', ' '),\n              status: 'failed',\n              records: 0\n            },\n            ...prevHistory\n          ]);\n        }\n      } catch (err) {\n        console.error('Error handling response:', err);\n        setUploadStatus({ type: 'error', message: 'Error processing server response. Check console for details.' });\n      } finally {\n        setIsUploading(false);\n      }\n    };\n\n    xhr.onerror = () => {\n      setUploadStatus({ type: 'error', message: 'Network error occurred during upload.' });\n      setIsUploading(false);\n    };\n\n    // Use the full URL with port to ensure it reaches the backend\n    xhr.open('POST', 'http://localhost:5000/api/admin/upload-excel', true);\n    xhr.send(formData);\n  };\n\n  return (\n    <>\n      <SizibleNavigation />\n      <PageContainer>\n        <PageHeader>\n          <h1>Excel Upload</h1>\n          <SizibleButton as=\"a\" href=\"/admin/dashboard\" variant=\"secondary\">\n            Back to Dashboard\n          </SizibleButton>\n        </PageHeader>\n        \n        <SizibleCard elevated>\n          <h2>Upload Product Data</h2>\n          <p>Upload an Excel file containing product data. The system will process the file and update the database accordingly.</p>\n          <p>The Excel file should contain the following columns: FE_Item_Code, Name, Brand, Type, Size, Color, etc.</p>\n          \n          <UploadArea \n            isDragging={isDragging}\n            onDragOver={handleDragOver}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n            onClick={handleUploadClick}\n          >\n            <UploadIcon>📄</UploadIcon>\n            <h3>Drag & Drop Excel File Here</h3>\n            <p>or click to browse files</p>\n            <FileInput \n              type=\"file\" \n              ref={fileInputRef}\n              accept=\".xlsx,.xls\"\n              onChange={handleFileInputChange}\n            />\n            {selectedFile && (\n              <p><strong>Selected file:</strong> {selectedFile.name}</p>\n            )}\n          </UploadArea>\n          \n          {uploadStatus && (\n            <StatusMessage type={uploadStatus.type}>\n              {uploadStatus.message}\n            </StatusMessage>\n          )}\n          \n          {isUploading && (\n            <ProgressContainer>\n              <p>Uploading: {uploadProgress}%</p>\n              <ProgressBar>\n                <ProgressFill progress={uploadProgress} />\n              </ProgressBar>\n            </ProgressContainer>\n          )}\n          \n          <SizibleButton \n            onClick={handleUpload} \n            disabled={!selectedFile || isUploading}\n            style={{ marginTop: '20px' }}\n          >\n            {isUploading ? 'Processing...' : 'Upload File'}\n          </SizibleButton>\n        </SizibleCard>\n        \n        <UploadHistoryCard>\n          <h2>Upload History</h2>\n          \n          {uploadHistory.length > 0 ? (\n            <HistoryTable>\n              <thead>\n                <tr>\n                  <th>Filename</th>\n                  <th>Date & Time</th>\n                  <th>Status</th>\n                  <th>Records Updated</th>\n                </tr>\n              </thead>\n              <tbody>\n                {uploadHistory.map(upload => (\n                  <tr key={upload.id}>\n                    <td>{upload.filename}</td>\n                    <td>{upload.timestamp}</td>\n                    <td>\n                      <StatusBadge status={upload.status}>\n                        {upload.status.charAt(0).toUpperCase() + upload.status.slice(1)}\n                      </StatusBadge>\n                    </td>\n                    <td>{upload.records}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </HistoryTable>\n          ) : (\n            <p>No upload history available.</p>\n          )}\n        </UploadHistoryCard>\n      </PageContainer>\n    </>\n  );\n};\n\nexport default ExcelUploadPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}