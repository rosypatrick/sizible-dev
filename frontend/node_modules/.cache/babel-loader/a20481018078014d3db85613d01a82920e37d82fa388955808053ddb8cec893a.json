{"ast":null,"code":"var _jsxFileName = \"c:\\\\sophia\\\\windsurf\\\\sizible-dev\\\\frontend\\\\src\\\\pages\\\\admin\\\\ExcelUploadPage.js\",\n  _s = $RefreshSig$();\n/**\n * Excel Upload Page\n * \n * This page allows admin users to upload Excel files containing product data.\n * It handles file validation, upload, and displays processing status.\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport SizibleNavigation from '../../components/common/SizibleNavigation';\nimport SizibleButton from '../../components/common/SizibleButton';\nimport SizibleCard from '../../components/common/SizibleCard';\n\n// Styled components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageContainer = styled.div`\n  padding: ${props => props.theme.spacing.large};\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n_c = PageContainer;\nconst PageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${props => props.theme.spacing.large};\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: ${props => props.theme.spacing.medium};\n  }\n`;\n_c2 = PageHeader;\nconst UploadArea = styled.div`\n  border: 2px dashed ${props => props.isDragging ? props.theme.colors.primary : '#ddd'};\n  border-radius: ${props => props.theme.borderRadius.medium};\n  padding: ${props => props.theme.spacing.xlarge};\n  text-align: center;\n  margin-bottom: ${props => props.theme.spacing.large};\n  transition: all 0.3s ease;\n  background-color: ${props => props.isDragging ? 'rgba(0, 123, 255, 0.05)' : 'transparent'};\n  cursor: pointer;\n`;\n_c3 = UploadArea;\nconst UploadIcon = styled.div`\n  font-size: 3rem;\n  margin-bottom: ${props => props.theme.spacing.medium};\n  color: ${props => props.theme.colors.primary};\n`;\n_c4 = UploadIcon;\nconst FileInput = styled.input`\n  display: none;\n`;\n_c5 = FileInput;\nconst ProgressContainer = styled.div`\n  margin: ${props => props.theme.spacing.large} 0;\n`;\n_c6 = ProgressContainer;\nconst ProgressBar = styled.div`\n  height: 10px;\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  margin-top: ${props => props.theme.spacing.small};\n  overflow: hidden;\n`;\n_c7 = ProgressBar;\nconst ProgressFill = styled.div`\n  height: 100%;\n  width: ${props => props.progress}%;\n  background-color: ${props => props.theme.colors.primary};\n  transition: width 0.3s ease;\n`;\n_c8 = ProgressFill;\nconst StatusMessage = styled.div`\n  padding: ${props => props.theme.spacing.medium};\n  border-radius: ${props => props.theme.borderRadius.small};\n  margin: ${props => props.theme.spacing.medium} 0;\n  background-color: ${props => {\n  switch (props.type) {\n    case 'success':\n      return 'rgba(40, 167, 69, 0.1)';\n    case 'error':\n      return 'rgba(220, 53, 69, 0.1)';\n    case 'info':\n      return 'rgba(0, 123, 255, 0.1)';\n    default:\n      return 'transparent';\n  }\n}};\n  color: ${props => {\n  switch (props.type) {\n    case 'success':\n      return '#28a745';\n    case 'error':\n      return '#dc3545';\n    case 'info':\n      return '#007bff';\n    default:\n      return 'inherit';\n  }\n}};\n  border-left: 4px solid ${props => {\n  switch (props.type) {\n    case 'success':\n      return '#28a745';\n    case 'error':\n      return '#dc3545';\n    case 'info':\n      return '#007bff';\n    default:\n      return 'transparent';\n  }\n}};\n`;\n_c9 = StatusMessage;\nconst UploadHistoryCard = styled(SizibleCard)`\n  margin-top: ${props => props.theme.spacing.xlarge};\n`;\n_c10 = UploadHistoryCard;\nconst HistoryTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  \n  th, td {\n    padding: ${props => props.theme.spacing.small};\n    text-align: left;\n    border-bottom: 1px solid #eee;\n  }\n  \n  th {\n    font-weight: ${props => props.theme.typography.fontWeight.medium};\n  }\n`;\n_c11 = HistoryTable;\nconst StatusBadge = styled.span`\n  display: inline-block;\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 0.8rem;\n  background-color: ${props => {\n  switch (props.status) {\n    case 'success':\n      return 'rgba(40, 167, 69, 0.1)';\n    case 'failed':\n      return 'rgba(220, 53, 69, 0.1)';\n    case 'processing':\n      return 'rgba(255, 193, 7, 0.1)';\n    default:\n      return 'rgba(0, 123, 255, 0.1)';\n  }\n}};\n  color: ${props => {\n  switch (props.status) {\n    case 'success':\n      return '#28a745';\n    case 'failed':\n      return '#dc3545';\n    case 'processing':\n      return '#ffc107';\n    default:\n      return '#007bff';\n  }\n}};\n`;\n\n/**\n * Excel Upload Page Component\n * \n * @returns {JSX.Element} The Excel upload page component\n */\n_c12 = StatusBadge;\nconst ExcelUploadPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadHistory, setUploadHistory] = useState([]);\n\n  // Fetch upload history from the backend\n  const fetchUploadHistory = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/admin/upload-history');\n      if (response.ok) {\n        const data = await response.json();\n        if (data.history && Array.isArray(data.history)) {\n          // Transform the data to match our frontend format\n          const formattedHistory = data.history.map(item => ({\n            id: item.id,\n            filename: item.filename,\n            timestamp: new Date(item.created_at).toLocaleString(),\n            status: item.success_count > 0 ? 'success' : 'failed',\n            records: item.success_count || 0\n          }));\n          setUploadHistory(formattedHistory);\n        }\n      } else {\n        console.error('Failed to fetch upload history');\n        // Fallback to sample data if API fails\n        setUploadHistory([{\n          id: 1,\n          filename: 'products_march_2025.xlsx',\n          timestamp: '2025-03-15 14:32',\n          status: 'success',\n          records: 124\n        }, {\n          id: 2,\n          filename: 'products_feb_2025.xlsx',\n          timestamp: '2025-02-22 09:15',\n          status: 'success',\n          records: 98\n        }, {\n          id: 3,\n          filename: 'test_upload.xlsx',\n          timestamp: '2025-02-10 16:45',\n          status: 'failed',\n          records: 0\n        }]);\n      }\n    } catch (error) {\n      console.error('Error fetching upload history:', error);\n      // Fallback to sample data if API fails\n      setUploadHistory([{\n        id: 1,\n        filename: 'products_march_2025.xlsx',\n        timestamp: '2025-03-15 14:32',\n        status: 'success',\n        records: 124\n      }, {\n        id: 2,\n        filename: 'products_feb_2025.xlsx',\n        timestamp: '2025-02-22 09:15',\n        status: 'success',\n        records: 98\n      }, {\n        id: 3,\n        filename: 'test_upload.xlsx',\n        timestamp: '2025-02-10 16:45',\n        status: 'failed',\n        records: 0\n      }]);\n    }\n  };\n\n  // Check if admin is authenticated\n  useEffect(() => {\n    const isAuthenticated = localStorage.getItem('adminAuthenticated') === 'true';\n    if (!isAuthenticated) {\n      navigate('/admin/login');\n    }\n    fetchUploadHistory();\n  }, [navigate]);\n\n  // Handle drag events\n  const handleDragOver = e => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    setIsDragging(false);\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileSelect(files[0]);\n    }\n  };\n\n  // Handle file selection\n  const handleFileSelect = file => {\n    // Check if file is an Excel file\n    if (file && (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || file.type === 'application/vnd.ms-excel')) {\n      setSelectedFile(file);\n      setUploadStatus({\n        type: 'info',\n        message: `File \"${file.name}\" selected and ready for upload.`\n      });\n    } else {\n      setSelectedFile(null);\n      setUploadStatus({\n        type: 'error',\n        message: 'Please select a valid Excel file (.xlsx or .xls).'\n      });\n    }\n  };\n\n  // Handle file input change\n  const handleFileInputChange = e => {\n    if (e.target.files.length > 0) {\n      handleFileSelect(e.target.files[0]);\n    }\n  };\n\n  // Handle upload button click\n  const handleUploadClick = () => {\n    fileInputRef.current.click();\n  };\n\n  // Handle file upload\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setUploadStatus({\n        type: 'error',\n        message: 'Please select a file to upload.'\n      });\n      return;\n    }\n    setIsUploading(true);\n    setUploadProgress(0);\n    setUploadStatus({\n      type: 'info',\n      message: 'Uploading file...'\n    });\n\n    // Use XMLHttpRequest for better progress tracking\n    const xhr = new XMLHttpRequest();\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    xhr.upload.onprogress = event => {\n      if (event.lengthComputable) {\n        const progress = Math.round(event.loaded / event.total * 100);\n        setUploadProgress(progress);\n      }\n    };\n    xhr.onload = async () => {\n      try {\n        // Add a timeout to prevent hanging at 100%\n        setTimeout(() => {\n          setIsUploading(false);\n        }, 10000); // 10 second timeout as a fallback\n\n        let result;\n        try {\n          result = JSON.parse(xhr.responseText);\n        } catch (parseError) {\n          console.error('Error parsing response:', parseError, 'Response:', xhr.responseText);\n          setUploadStatus({\n            type: 'error',\n            message: 'Error processing server response. Check console for details.'\n          });\n          setIsUploading(false);\n          return;\n        }\n        if (xhr.status === 200) {\n          var _result$result;\n          setUploadStatus({\n            type: 'success',\n            message: result.message || `File uploaded and processed successfully. ${((_result$result = result.result) === null || _result$result === void 0 ? void 0 : _result$result.success) || 0} records updated.`\n          });\n          setSelectedFile(null);\n\n          // Add to upload history\n          const now = new Date();\n          const timestamp = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')} ${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`;\n          setUploadHistory(prevHistory => {\n            var _result$result2;\n            return [{\n              id: prevHistory.length + 1,\n              filename: selectedFile.name,\n              timestamp,\n              status: 'success',\n              records: ((_result$result2 = result.result) === null || _result$result2 === void 0 ? void 0 : _result$result2.total) || 0\n            }, ...prevHistory];\n          });\n\n          // Fetch updated history\n          fetchUploadHistory();\n        } else {\n          setUploadStatus({\n            type: 'error',\n            message: result.error || 'Failed to upload or process file.'\n          });\n          setUploadHistory(prevHistory => [{\n            id: prevHistory.length + 1,\n            filename: selectedFile.name,\n            timestamp: new Date().toISOString().slice(0, 16).replace('T', ' '),\n            status: 'failed',\n            records: 0\n          }, ...prevHistory]);\n        }\n      } catch (err) {\n        console.error('Error handling response:', err);\n        setUploadStatus({\n          type: 'error',\n          message: 'Error processing server response. Check console for details.'\n        });\n      } finally {\n        setIsUploading(false);\n      }\n    };\n    xhr.onerror = () => {\n      setUploadStatus({\n        type: 'error',\n        message: 'Network error occurred during upload.'\n      });\n      setIsUploading(false);\n    };\n\n    // Use the full URL with port to ensure it reaches the backend\n    xhr.open('POST', 'http://localhost:5000/api/admin/upload-excel', true);\n    xhr.send(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SizibleNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Excel Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SizibleButton, {\n          as: \"a\",\n          href: \"/admin/dashboard\",\n          variant: \"secondary\",\n          children: \"Back to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SizibleCard, {\n        elevated: true,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload Product Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload an Excel file containing product data. The system will process the file and update the database accordingly.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The Excel file should contain the following columns: FE_Item_Code, Name, Brand, Type, Size, Color, etc.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UploadArea, {\n          isDragging: isDragging,\n          onDragOver: handleDragOver,\n          onDragLeave: handleDragLeave,\n          onDrop: handleDrop,\n          onClick: handleUploadClick,\n          children: [/*#__PURE__*/_jsxDEV(UploadIcon, {\n            children: \"\\uD83D\\uDCC4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Drag & Drop Excel File Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"or click to browse files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FileInput, {\n            type: \"file\",\n            ref: fileInputRef,\n            accept: \".xlsx,.xls\",\n            onChange: handleFileInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Selected file:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 18\n            }, this), \" \", selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), uploadStatus && /*#__PURE__*/_jsxDEV(StatusMessage, {\n          type: uploadStatus.type,\n          children: uploadStatus.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), isUploading && /*#__PURE__*/_jsxDEV(ProgressContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Uploading: \", uploadProgress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n            children: /*#__PURE__*/_jsxDEV(ProgressFill, {\n              progress: uploadProgress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SizibleButton, {\n          onClick: handleUpload,\n          disabled: !selectedFile || isUploading,\n          style: {\n            marginTop: '20px'\n          },\n          children: isUploading ? 'Processing...' : 'Upload File'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UploadHistoryCard, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), uploadHistory.length > 0 ? /*#__PURE__*/_jsxDEV(HistoryTable, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Filename\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date & Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Records Updated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: uploadHistory.map(upload => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: upload.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: upload.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(StatusBadge, {\n                  status: upload.status,\n                  children: upload.status.charAt(0).toUpperCase() + upload.status.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: upload.records\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 21\n              }, this)]\n            }, upload.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No upload history available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ExcelUploadPage, \"8ZjyAc/4Mak+85BTf2ql4WWQD7A=\", false, function () {\n  return [useNavigate];\n});\n_c13 = ExcelUploadPage;\nexport default ExcelUploadPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"PageContainer\");\n$RefreshReg$(_c2, \"PageHeader\");\n$RefreshReg$(_c3, \"UploadArea\");\n$RefreshReg$(_c4, \"UploadIcon\");\n$RefreshReg$(_c5, \"FileInput\");\n$RefreshReg$(_c6, \"ProgressContainer\");\n$RefreshReg$(_c7, \"ProgressBar\");\n$RefreshReg$(_c8, \"ProgressFill\");\n$RefreshReg$(_c9, \"StatusMessage\");\n$RefreshReg$(_c10, \"UploadHistoryCard\");\n$RefreshReg$(_c11, \"HistoryTable\");\n$RefreshReg$(_c12, \"StatusBadge\");\n$RefreshReg$(_c13, \"ExcelUploadPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","styled","SizibleNavigation","SizibleButton","SizibleCard","jsxDEV","_jsxDEV","Fragment","_Fragment","PageContainer","div","props","theme","spacing","large","_c","PageHeader","medium","_c2","UploadArea","isDragging","colors","primary","borderRadius","xlarge","_c3","UploadIcon","_c4","FileInput","input","_c5","ProgressContainer","_c6","ProgressBar","small","_c7","ProgressFill","progress","_c8","StatusMessage","type","_c9","UploadHistoryCard","_c10","HistoryTable","table","typography","fontWeight","_c11","StatusBadge","span","status","_c12","ExcelUploadPage","_s","navigate","fileInputRef","setIsDragging","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","isUploading","setIsUploading","uploadHistory","setUploadHistory","fetchUploadHistory","response","fetch","ok","data","json","history","Array","isArray","formattedHistory","map","item","id","filename","timestamp","Date","created_at","toLocaleString","success_count","records","console","error","isAuthenticated","localStorage","getItem","handleDragOver","e","preventDefault","handleDragLeave","handleDrop","files","dataTransfer","length","handleFileSelect","file","message","name","handleFileInputChange","target","handleUploadClick","current","click","handleUpload","xhr","XMLHttpRequest","formData","FormData","append","upload","onprogress","event","lengthComputable","Math","round","loaded","total","onload","setTimeout","result","JSON","parse","responseText","parseError","_result$result","success","now","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","prevHistory","_result$result2","toISOString","slice","replace","err","onerror","open","send","children","fileName","_jsxFileName","lineNumber","columnNumber","as","href","variant","elevated","onDragOver","onDragLeave","onDrop","onClick","ref","accept","onChange","disabled","style","marginTop","charAt","toUpperCase","_c13","$RefreshReg$"],"sources":["c:/sophia/windsurf/sizible-dev/frontend/src/pages/admin/ExcelUploadPage.js"],"sourcesContent":["/**\n * Excel Upload Page\n * \n * This page allows admin users to upload Excel files containing product data.\n * It handles file validation, upload, and displays processing status.\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport SizibleNavigation from '../../components/common/SizibleNavigation';\nimport SizibleButton from '../../components/common/SizibleButton';\nimport SizibleCard from '../../components/common/SizibleCard';\n\n// Styled components\nconst PageContainer = styled.div`\n  padding: ${props => props.theme.spacing.large};\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst PageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${props => props.theme.spacing.large};\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: ${props => props.theme.spacing.medium};\n  }\n`;\n\nconst UploadArea = styled.div`\n  border: 2px dashed ${props => props.isDragging ? props.theme.colors.primary : '#ddd'};\n  border-radius: ${props => props.theme.borderRadius.medium};\n  padding: ${props => props.theme.spacing.xlarge};\n  text-align: center;\n  margin-bottom: ${props => props.theme.spacing.large};\n  transition: all 0.3s ease;\n  background-color: ${props => props.isDragging ? 'rgba(0, 123, 255, 0.05)' : 'transparent'};\n  cursor: pointer;\n`;\n\nconst UploadIcon = styled.div`\n  font-size: 3rem;\n  margin-bottom: ${props => props.theme.spacing.medium};\n  color: ${props => props.theme.colors.primary};\n`;\n\nconst FileInput = styled.input`\n  display: none;\n`;\n\nconst ProgressContainer = styled.div`\n  margin: ${props => props.theme.spacing.large} 0;\n`;\n\nconst ProgressBar = styled.div`\n  height: 10px;\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  margin-top: ${props => props.theme.spacing.small};\n  overflow: hidden;\n`;\n\nconst ProgressFill = styled.div`\n  height: 100%;\n  width: ${props => props.progress}%;\n  background-color: ${props => props.theme.colors.primary};\n  transition: width 0.3s ease;\n`;\n\nconst StatusMessage = styled.div`\n  padding: ${props => props.theme.spacing.medium};\n  border-radius: ${props => props.theme.borderRadius.small};\n  margin: ${props => props.theme.spacing.medium} 0;\n  background-color: ${props => {\n    switch(props.type) {\n      case 'success': return 'rgba(40, 167, 69, 0.1)';\n      case 'error': return 'rgba(220, 53, 69, 0.1)';\n      case 'info': return 'rgba(0, 123, 255, 0.1)';\n      default: return 'transparent';\n    }\n  }};\n  color: ${props => {\n    switch(props.type) {\n      case 'success': return '#28a745';\n      case 'error': return '#dc3545';\n      case 'info': return '#007bff';\n      default: return 'inherit';\n    }\n  }};\n  border-left: 4px solid ${props => {\n    switch(props.type) {\n      case 'success': return '#28a745';\n      case 'error': return '#dc3545';\n      case 'info': return '#007bff';\n      default: return 'transparent';\n    }\n  }};\n`;\n\nconst UploadHistoryCard = styled(SizibleCard)`\n  margin-top: ${props => props.theme.spacing.xlarge};\n`;\n\nconst HistoryTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  \n  th, td {\n    padding: ${props => props.theme.spacing.small};\n    text-align: left;\n    border-bottom: 1px solid #eee;\n  }\n  \n  th {\n    font-weight: ${props => props.theme.typography.fontWeight.medium};\n  }\n`;\n\nconst StatusBadge = styled.span`\n  display: inline-block;\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 0.8rem;\n  background-color: ${props => {\n    switch(props.status) {\n      case 'success': return 'rgba(40, 167, 69, 0.1)';\n      case 'failed': return 'rgba(220, 53, 69, 0.1)';\n      case 'processing': return 'rgba(255, 193, 7, 0.1)';\n      default: return 'rgba(0, 123, 255, 0.1)';\n    }\n  }};\n  color: ${props => {\n    switch(props.status) {\n      case 'success': return '#28a745';\n      case 'failed': return '#dc3545';\n      case 'processing': return '#ffc107';\n      default: return '#007bff';\n    }\n  }};\n`;\n\n/**\n * Excel Upload Page Component\n * \n * @returns {JSX.Element} The Excel upload page component\n */\nconst ExcelUploadPage = () => {\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadHistory, setUploadHistory] = useState([]);\n  \n  // Fetch upload history from the backend\n  const fetchUploadHistory = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/admin/upload-history');\n      if (response.ok) {\n        const data = await response.json();\n        if (data.history && Array.isArray(data.history)) {\n          // Transform the data to match our frontend format\n          const formattedHistory = data.history.map(item => ({\n            id: item.id,\n            filename: item.filename,\n            timestamp: new Date(item.created_at).toLocaleString(),\n            status: item.success_count > 0 ? 'success' : 'failed',\n            records: item.success_count || 0\n          }));\n          setUploadHistory(formattedHistory);\n        }\n      } else {\n        console.error('Failed to fetch upload history');\n        // Fallback to sample data if API fails\n        setUploadHistory([\n          { id: 1, filename: 'products_march_2025.xlsx', timestamp: '2025-03-15 14:32', status: 'success', records: 124 },\n          { id: 2, filename: 'products_feb_2025.xlsx', timestamp: '2025-02-22 09:15', status: 'success', records: 98 },\n          { id: 3, filename: 'test_upload.xlsx', timestamp: '2025-02-10 16:45', status: 'failed', records: 0 }\n        ]);\n      }\n    } catch (error) {\n      console.error('Error fetching upload history:', error);\n      // Fallback to sample data if API fails\n      setUploadHistory([\n        { id: 1, filename: 'products_march_2025.xlsx', timestamp: '2025-03-15 14:32', status: 'success', records: 124 },\n        { id: 2, filename: 'products_feb_2025.xlsx', timestamp: '2025-02-22 09:15', status: 'success', records: 98 },\n        { id: 3, filename: 'test_upload.xlsx', timestamp: '2025-02-10 16:45', status: 'failed', records: 0 }\n      ]);\n    }\n  };\n\n  // Check if admin is authenticated\n  useEffect(() => {\n    const isAuthenticated = localStorage.getItem('adminAuthenticated') === 'true';\n    if (!isAuthenticated) {\n      navigate('/admin/login');\n    }\n    \n    fetchUploadHistory();\n  }, [navigate]);\n  \n  // Handle drag events\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  \n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n  \n  const handleDrop = (e) => {\n    e.preventDefault();\n    setIsDragging(false);\n    \n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileSelect(files[0]);\n    }\n  };\n  \n  // Handle file selection\n  const handleFileSelect = (file) => {\n    // Check if file is an Excel file\n    if (file && (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || \n                file.type === 'application/vnd.ms-excel')) {\n      setSelectedFile(file);\n      setUploadStatus({ type: 'info', message: `File \"${file.name}\" selected and ready for upload.` });\n    } else {\n      setSelectedFile(null);\n      setUploadStatus({ type: 'error', message: 'Please select a valid Excel file (.xlsx or .xls).' });\n    }\n  };\n  \n  // Handle file input change\n  const handleFileInputChange = (e) => {\n    if (e.target.files.length > 0) {\n      handleFileSelect(e.target.files[0]);\n    }\n  };\n  \n  // Handle upload button click\n  const handleUploadClick = () => {\n    fileInputRef.current.click();\n  };\n  \n  // Handle file upload\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setUploadStatus({ type: 'error', message: 'Please select a file to upload.' });\n      return;\n    }\n\n    setIsUploading(true);\n    setUploadProgress(0);\n    setUploadStatus({ type: 'info', message: 'Uploading file...' });\n\n    // Use XMLHttpRequest for better progress tracking\n    const xhr = new XMLHttpRequest();\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n    xhr.upload.onprogress = (event) => {\n      if (event.lengthComputable) {\n        const progress = Math.round((event.loaded / event.total) * 100);\n        setUploadProgress(progress);\n      }\n    };\n\n    xhr.onload = async () => {\n      try {\n        // Add a timeout to prevent hanging at 100%\n        setTimeout(() => {\n          setIsUploading(false);\n        }, 10000); // 10 second timeout as a fallback\n        \n        let result;\n        try {\n          result = JSON.parse(xhr.responseText);\n        } catch (parseError) {\n          console.error('Error parsing response:', parseError, 'Response:', xhr.responseText);\n          setUploadStatus({ type: 'error', message: 'Error processing server response. Check console for details.' });\n          setIsUploading(false);\n          return;\n        }\n        \n        if (xhr.status === 200) {\n          setUploadStatus({ \n            type: 'success', \n            message: result.message || `File uploaded and processed successfully. ${result.result?.success || 0} records updated.` \n          });\n          setSelectedFile(null);\n          \n          // Add to upload history\n          const now = new Date();\n          const timestamp = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')} ${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`;\n          \n          setUploadHistory(prevHistory => [\n            {\n              id: prevHistory.length + 1,\n              filename: selectedFile.name,\n              timestamp,\n              status: 'success',\n              records: result.result?.total || 0\n            },\n            ...prevHistory\n          ]);\n          \n          // Fetch updated history\n          fetchUploadHistory();\n        } else {\n          setUploadStatus({ type: 'error', message: result.error || 'Failed to upload or process file.' });\n          setUploadHistory(prevHistory => [\n            {\n              id: prevHistory.length + 1,\n              filename: selectedFile.name,\n              timestamp: new Date().toISOString().slice(0, 16).replace('T', ' '),\n              status: 'failed',\n              records: 0\n            },\n            ...prevHistory\n          ]);\n        }\n      } catch (err) {\n        console.error('Error handling response:', err);\n        setUploadStatus({ type: 'error', message: 'Error processing server response. Check console for details.' });\n      } finally {\n        setIsUploading(false);\n      }\n    };\n\n    xhr.onerror = () => {\n      setUploadStatus({ type: 'error', message: 'Network error occurred during upload.' });\n      setIsUploading(false);\n    };\n\n    // Use the full URL with port to ensure it reaches the backend\n    xhr.open('POST', 'http://localhost:5000/api/admin/upload-excel', true);\n    xhr.send(formData);\n  };\n\n  return (\n    <>\n      <SizibleNavigation />\n      <PageContainer>\n        <PageHeader>\n          <h1>Excel Upload</h1>\n          <SizibleButton as=\"a\" href=\"/admin/dashboard\" variant=\"secondary\">\n            Back to Dashboard\n          </SizibleButton>\n        </PageHeader>\n        \n        <SizibleCard elevated>\n          <h2>Upload Product Data</h2>\n          <p>Upload an Excel file containing product data. The system will process the file and update the database accordingly.</p>\n          <p>The Excel file should contain the following columns: FE_Item_Code, Name, Brand, Type, Size, Color, etc.</p>\n          \n          <UploadArea \n            isDragging={isDragging}\n            onDragOver={handleDragOver}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n            onClick={handleUploadClick}\n          >\n            <UploadIcon>📄</UploadIcon>\n            <h3>Drag & Drop Excel File Here</h3>\n            <p>or click to browse files</p>\n            <FileInput \n              type=\"file\" \n              ref={fileInputRef}\n              accept=\".xlsx,.xls\"\n              onChange={handleFileInputChange}\n            />\n            {selectedFile && (\n              <p><strong>Selected file:</strong> {selectedFile.name}</p>\n            )}\n          </UploadArea>\n          \n          {uploadStatus && (\n            <StatusMessage type={uploadStatus.type}>\n              {uploadStatus.message}\n            </StatusMessage>\n          )}\n          \n          {isUploading && (\n            <ProgressContainer>\n              <p>Uploading: {uploadProgress}%</p>\n              <ProgressBar>\n                <ProgressFill progress={uploadProgress} />\n              </ProgressBar>\n            </ProgressContainer>\n          )}\n          \n          <SizibleButton \n            onClick={handleUpload} \n            disabled={!selectedFile || isUploading}\n            style={{ marginTop: '20px' }}\n          >\n            {isUploading ? 'Processing...' : 'Upload File'}\n          </SizibleButton>\n        </SizibleCard>\n        \n        <UploadHistoryCard>\n          <h2>Upload History</h2>\n          \n          {uploadHistory.length > 0 ? (\n            <HistoryTable>\n              <thead>\n                <tr>\n                  <th>Filename</th>\n                  <th>Date & Time</th>\n                  <th>Status</th>\n                  <th>Records Updated</th>\n                </tr>\n              </thead>\n              <tbody>\n                {uploadHistory.map(upload => (\n                  <tr key={upload.id}>\n                    <td>{upload.filename}</td>\n                    <td>{upload.timestamp}</td>\n                    <td>\n                      <StatusBadge status={upload.status}>\n                        {upload.status.charAt(0).toUpperCase() + upload.status.slice(1)}\n                      </StatusBadge>\n                    </td>\n                    <td>{upload.records}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </HistoryTable>\n          ) : (\n            <p>No upload history available.</p>\n          )}\n        </UploadHistoryCard>\n      </PageContainer>\n    </>\n  );\n};\n\nexport default ExcelUploadPage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,iBAAiB,MAAM,2CAA2C;AACzE,OAAOC,aAAa,MAAM,uCAAuC;AACjE,OAAOC,WAAW,MAAM,qCAAqC;;AAE7D;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,aAAa,GAAGR,MAAM,CAACS,GAAG;AAChC,aAAaC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK;AAC/C;AACA;AACA,CAAC;AAACC,EAAA,GAJIN,aAAa;AAMnB,MAAMO,UAAU,GAAGf,MAAM,CAACS,GAAG;AAC7B;AACA;AACA;AACA,mBAAmBC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK;AACrD;AACA;AACA;AACA;AACA,WAAWH,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,OAAO,CAACI,MAAM;AAC9C;AACA,CAAC;AAACC,GAAA,GAXIF,UAAU;AAahB,MAAMG,UAAU,GAAGlB,MAAM,CAACS,GAAG;AAC7B,uBAAuBC,KAAK,IAAIA,KAAK,CAACS,UAAU,GAAGT,KAAK,CAACC,KAAK,CAACS,MAAM,CAACC,OAAO,GAAG,MAAM;AACtF,mBAAmBX,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACW,YAAY,CAACN,MAAM;AAC3D,aAAaN,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,OAAO,CAACW,MAAM;AAChD;AACA,mBAAmBb,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK;AACrD;AACA,sBAAsBH,KAAK,IAAIA,KAAK,CAACS,UAAU,GAAG,yBAAyB,GAAG,aAAa;AAC3F;AACA,CAAC;AAACK,GAAA,GATIN,UAAU;AAWhB,MAAMO,UAAU,GAAGzB,MAAM,CAACS,GAAG;AAC7B;AACA,mBAAmBC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,OAAO,CAACI,MAAM;AACtD,WAAWN,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACS,MAAM,CAACC,OAAO;AAC9C,CAAC;AAACK,GAAA,GAJID,UAAU;AAMhB,MAAME,SAAS,GAAG3B,MAAM,CAAC4B,KAAK;AAC9B;AACA,CAAC;AAACC,GAAA,GAFIF,SAAS;AAIf,MAAMG,iBAAiB,GAAG9B,MAAM,CAACS,GAAG;AACpC,YAAYC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK;AAC9C,CAAC;AAACkB,GAAA,GAFID,iBAAiB;AAIvB,MAAME,WAAW,GAAGhC,MAAM,CAACS,GAAG;AAC9B;AACA;AACA;AACA,gBAAgBC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,OAAO,CAACqB,KAAK;AAClD;AACA,CAAC;AAACC,GAAA,GANIF,WAAW;AAQjB,MAAMG,YAAY,GAAGnC,MAAM,CAACS,GAAG;AAC/B;AACA,WAAWC,KAAK,IAAIA,KAAK,CAAC0B,QAAQ;AAClC,sBAAsB1B,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACS,MAAM,CAACC,OAAO;AACzD;AACA,CAAC;AAACgB,GAAA,GALIF,YAAY;AAOlB,MAAMG,aAAa,GAAGtC,MAAM,CAACS,GAAG;AAChC,aAAaC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,OAAO,CAACI,MAAM;AAChD,mBAAmBN,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACW,YAAY,CAACW,KAAK;AAC1D,YAAYvB,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,OAAO,CAACI,MAAM;AAC/C,sBAAsBN,KAAK,IAAI;EAC3B,QAAOA,KAAK,CAAC6B,IAAI;IACf,KAAK,SAAS;MAAE,OAAO,wBAAwB;IAC/C,KAAK,OAAO;MAAE,OAAO,wBAAwB;IAC7C,KAAK,MAAM;MAAE,OAAO,wBAAwB;IAC5C;MAAS,OAAO,aAAa;EAC/B;AACF,CAAC;AACH,WAAW7B,KAAK,IAAI;EAChB,QAAOA,KAAK,CAAC6B,IAAI;IACf,KAAK,SAAS;MAAE,OAAO,SAAS;IAChC,KAAK,OAAO;MAAE,OAAO,SAAS;IAC9B,KAAK,MAAM;MAAE,OAAO,SAAS;IAC7B;MAAS,OAAO,SAAS;EAC3B;AACF,CAAC;AACH,2BAA2B7B,KAAK,IAAI;EAChC,QAAOA,KAAK,CAAC6B,IAAI;IACf,KAAK,SAAS;MAAE,OAAO,SAAS;IAChC,KAAK,OAAO;MAAE,OAAO,SAAS;IAC9B,KAAK,MAAM;MAAE,OAAO,SAAS;IAC7B;MAAS,OAAO,aAAa;EAC/B;AACF,CAAC;AACH,CAAC;AAACC,GAAA,GA5BIF,aAAa;AA8BnB,MAAMG,iBAAiB,GAAGzC,MAAM,CAACG,WAAW,CAAC;AAC7C,gBAAgBO,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,OAAO,CAACW,MAAM;AACnD,CAAC;AAACmB,IAAA,GAFID,iBAAiB;AAIvB,MAAME,YAAY,GAAG3C,MAAM,CAAC4C,KAAK;AACjC;AACA;AACA;AACA;AACA,eAAelC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,OAAO,CAACqB,KAAK;AACjD;AACA;AACA;AACA;AACA;AACA,mBAAmBvB,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACkC,UAAU,CAACC,UAAU,CAAC9B,MAAM;AACpE;AACA,CAAC;AAAC+B,IAAA,GAbIJ,YAAY;AAelB,MAAMK,WAAW,GAAGhD,MAAM,CAACiD,IAAI;AAC/B;AACA;AACA;AACA;AACA,sBAAsBvC,KAAK,IAAI;EAC3B,QAAOA,KAAK,CAACwC,MAAM;IACjB,KAAK,SAAS;MAAE,OAAO,wBAAwB;IAC/C,KAAK,QAAQ;MAAE,OAAO,wBAAwB;IAC9C,KAAK,YAAY;MAAE,OAAO,wBAAwB;IAClD;MAAS,OAAO,wBAAwB;EAC1C;AACF,CAAC;AACH,WAAWxC,KAAK,IAAI;EAChB,QAAOA,KAAK,CAACwC,MAAM;IACjB,KAAK,SAAS;MAAE,OAAO,SAAS;IAChC,KAAK,QAAQ;MAAE,OAAO,SAAS;IAC/B,KAAK,YAAY;MAAE,OAAO,SAAS;IACnC;MAAS,OAAO,SAAS;EAC3B;AACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJAC,IAAA,GAvBMH,WAAW;AA4BjB,MAAMI,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGvD,WAAW,CAAC,CAAC;EAC9B,MAAMwD,YAAY,GAAGzD,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAACqB,UAAU,EAAEqC,aAAa,CAAC,GAAG5D,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC6D,YAAY,EAAEC,eAAe,CAAC,GAAG9D,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC+D,cAAc,EAAEC,iBAAiB,CAAC,GAAGhE,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACiE,YAAY,EAAEC,eAAe,CAAC,GAAGlE,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACmE,WAAW,EAAEC,cAAc,CAAC,GAAGpE,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqE,aAAa,EAAEC,gBAAgB,CAAC,GAAGtE,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMuE,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,CAAC;MAC9E,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACE,OAAO,IAAIC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAACE,OAAO,CAAC,EAAE;UAC/C;UACA,MAAMG,gBAAgB,GAAGL,IAAI,CAACE,OAAO,CAACI,GAAG,CAACC,IAAI,KAAK;YACjDC,EAAE,EAAED,IAAI,CAACC,EAAE;YACXC,QAAQ,EAAEF,IAAI,CAACE,QAAQ;YACvBC,SAAS,EAAE,IAAIC,IAAI,CAACJ,IAAI,CAACK,UAAU,CAAC,CAACC,cAAc,CAAC,CAAC;YACrDlC,MAAM,EAAE4B,IAAI,CAACO,aAAa,GAAG,CAAC,GAAG,SAAS,GAAG,QAAQ;YACrDC,OAAO,EAAER,IAAI,CAACO,aAAa,IAAI;UACjC,CAAC,CAAC,CAAC;UACHnB,gBAAgB,CAACU,gBAAgB,CAAC;QACpC;MACF,CAAC,MAAM;QACLW,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAC;QAC/C;QACAtB,gBAAgB,CAAC,CACf;UAAEa,EAAE,EAAE,CAAC;UAAEC,QAAQ,EAAE,0BAA0B;UAAEC,SAAS,EAAE,kBAAkB;UAAE/B,MAAM,EAAE,SAAS;UAAEoC,OAAO,EAAE;QAAI,CAAC,EAC/G;UAAEP,EAAE,EAAE,CAAC;UAAEC,QAAQ,EAAE,wBAAwB;UAAEC,SAAS,EAAE,kBAAkB;UAAE/B,MAAM,EAAE,SAAS;UAAEoC,OAAO,EAAE;QAAG,CAAC,EAC5G;UAAEP,EAAE,EAAE,CAAC;UAAEC,QAAQ,EAAE,kBAAkB;UAAEC,SAAS,EAAE,kBAAkB;UAAE/B,MAAM,EAAE,QAAQ;UAAEoC,OAAO,EAAE;QAAE,CAAC,CACrG,CAAC;MACJ;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD;MACAtB,gBAAgB,CAAC,CACf;QAAEa,EAAE,EAAE,CAAC;QAAEC,QAAQ,EAAE,0BAA0B;QAAEC,SAAS,EAAE,kBAAkB;QAAE/B,MAAM,EAAE,SAAS;QAAEoC,OAAO,EAAE;MAAI,CAAC,EAC/G;QAAEP,EAAE,EAAE,CAAC;QAAEC,QAAQ,EAAE,wBAAwB;QAAEC,SAAS,EAAE,kBAAkB;QAAE/B,MAAM,EAAE,SAAS;QAAEoC,OAAO,EAAE;MAAG,CAAC,EAC5G;QAAEP,EAAE,EAAE,CAAC;QAAEC,QAAQ,EAAE,kBAAkB;QAAEC,SAAS,EAAE,kBAAkB;QAAE/B,MAAM,EAAE,QAAQ;QAAEoC,OAAO,EAAE;MAAE,CAAC,CACrG,CAAC;IACJ;EACF,CAAC;;EAED;EACAzF,SAAS,CAAC,MAAM;IACd,MAAM4F,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC,KAAK,MAAM;IAC7E,IAAI,CAACF,eAAe,EAAE;MACpBnC,QAAQ,CAAC,cAAc,CAAC;IAC1B;IAEAa,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMsC,cAAc,GAAIC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBtC,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMuC,eAAe,GAAGA,CAAA,KAAM;IAC5BvC,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMwC,UAAU,GAAIH,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBtC,aAAa,CAAC,KAAK,CAAC;IAEpB,MAAMyC,KAAK,GAAGJ,CAAC,CAACK,YAAY,CAACD,KAAK;IAClC,IAAIA,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;MACpBC,gBAAgB,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B;EACF,CAAC;;EAED;EACA,MAAMG,gBAAgB,GAAIC,IAAI,IAAK;IACjC;IACA,IAAIA,IAAI,KAAKA,IAAI,CAAC9D,IAAI,KAAK,mEAAmE,IAClF8D,IAAI,CAAC9D,IAAI,KAAK,0BAA0B,CAAC,EAAE;MACrDmB,eAAe,CAAC2C,IAAI,CAAC;MACrBvC,eAAe,CAAC;QAAEvB,IAAI,EAAE,MAAM;QAAE+D,OAAO,EAAE,SAASD,IAAI,CAACE,IAAI;MAAmC,CAAC,CAAC;IAClG,CAAC,MAAM;MACL7C,eAAe,CAAC,IAAI,CAAC;MACrBI,eAAe,CAAC;QAAEvB,IAAI,EAAE,OAAO;QAAE+D,OAAO,EAAE;MAAoD,CAAC,CAAC;IAClG;EACF,CAAC;;EAED;EACA,MAAME,qBAAqB,GAAIX,CAAC,IAAK;IACnC,IAAIA,CAAC,CAACY,MAAM,CAACR,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;MAC7BC,gBAAgB,CAACP,CAAC,CAACY,MAAM,CAACR,KAAK,CAAC,CAAC,CAAC,CAAC;IACrC;EACF,CAAC;;EAED;EACA,MAAMS,iBAAiB,GAAGA,CAAA,KAAM;IAC9BnD,YAAY,CAACoD,OAAO,CAACC,KAAK,CAAC,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACpD,YAAY,EAAE;MACjBK,eAAe,CAAC;QAAEvB,IAAI,EAAE,OAAO;QAAE+D,OAAO,EAAE;MAAkC,CAAC,CAAC;MAC9E;IACF;IAEAtC,cAAc,CAAC,IAAI,CAAC;IACpBJ,iBAAiB,CAAC,CAAC,CAAC;IACpBE,eAAe,CAAC;MAAEvB,IAAI,EAAE,MAAM;MAAE+D,OAAO,EAAE;IAAoB,CAAC,CAAC;;IAE/D;IACA,MAAMQ,GAAG,GAAG,IAAIC,cAAc,CAAC,CAAC;IAChC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEzD,YAAY,CAAC;IAErCqD,GAAG,CAACK,MAAM,CAACC,UAAU,GAAIC,KAAK,IAAK;MACjC,IAAIA,KAAK,CAACC,gBAAgB,EAAE;QAC1B,MAAMlF,QAAQ,GAAGmF,IAAI,CAACC,KAAK,CAAEH,KAAK,CAACI,MAAM,GAAGJ,KAAK,CAACK,KAAK,GAAI,GAAG,CAAC;QAC/D9D,iBAAiB,CAACxB,QAAQ,CAAC;MAC7B;IACF,CAAC;IAED0E,GAAG,CAACa,MAAM,GAAG,YAAY;MACvB,IAAI;QACF;QACAC,UAAU,CAAC,MAAM;UACf5D,cAAc,CAAC,KAAK,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;;QAEX,IAAI6D,MAAM;QACV,IAAI;UACFA,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACjB,GAAG,CAACkB,YAAY,CAAC;QACvC,CAAC,CAAC,OAAOC,UAAU,EAAE;UACnB1C,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEyC,UAAU,EAAE,WAAW,EAAEnB,GAAG,CAACkB,YAAY,CAAC;UACnFlE,eAAe,CAAC;YAAEvB,IAAI,EAAE,OAAO;YAAE+D,OAAO,EAAE;UAA+D,CAAC,CAAC;UAC3GtC,cAAc,CAAC,KAAK,CAAC;UACrB;QACF;QAEA,IAAI8C,GAAG,CAAC5D,MAAM,KAAK,GAAG,EAAE;UAAA,IAAAgF,cAAA;UACtBpE,eAAe,CAAC;YACdvB,IAAI,EAAE,SAAS;YACf+D,OAAO,EAAEuB,MAAM,CAACvB,OAAO,IAAI,6CAA6C,EAAA4B,cAAA,GAAAL,MAAM,CAACA,MAAM,cAAAK,cAAA,uBAAbA,cAAA,CAAeC,OAAO,KAAI,CAAC;UACrG,CAAC,CAAC;UACFzE,eAAe,CAAC,IAAI,CAAC;;UAErB;UACA,MAAM0E,GAAG,GAAG,IAAIlD,IAAI,CAAC,CAAC;UACtB,MAAMD,SAAS,GAAG,GAAGmD,GAAG,CAACC,WAAW,CAAC,CAAC,IAAIC,MAAM,CAACF,GAAG,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,MAAM,CAACF,GAAG,CAACK,OAAO,CAAC,CAAC,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,MAAM,CAACF,GAAG,CAACM,QAAQ,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,MAAM,CAACF,GAAG,CAACO,UAAU,CAAC,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;UAEzNtE,gBAAgB,CAAC0E,WAAW;YAAA,IAAAC,eAAA;YAAA,OAAI,CAC9B;cACE9D,EAAE,EAAE6D,WAAW,CAACzC,MAAM,GAAG,CAAC;cAC1BnB,QAAQ,EAAEvB,YAAY,CAAC8C,IAAI;cAC3BtB,SAAS;cACT/B,MAAM,EAAE,SAAS;cACjBoC,OAAO,EAAE,EAAAuD,eAAA,GAAAhB,MAAM,CAACA,MAAM,cAAAgB,eAAA,uBAAbA,eAAA,CAAenB,KAAK,KAAI;YACnC,CAAC,EACD,GAAGkB,WAAW,CACf;UAAA,EAAC;;UAEF;UACAzE,kBAAkB,CAAC,CAAC;QACtB,CAAC,MAAM;UACLL,eAAe,CAAC;YAAEvB,IAAI,EAAE,OAAO;YAAE+D,OAAO,EAAEuB,MAAM,CAACrC,KAAK,IAAI;UAAoC,CAAC,CAAC;UAChGtB,gBAAgB,CAAC0E,WAAW,IAAI,CAC9B;YACE7D,EAAE,EAAE6D,WAAW,CAACzC,MAAM,GAAG,CAAC;YAC1BnB,QAAQ,EAAEvB,YAAY,CAAC8C,IAAI;YAC3BtB,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAAC4D,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;YAClE9F,MAAM,EAAE,QAAQ;YAChBoC,OAAO,EAAE;UACX,CAAC,EACD,GAAGsD,WAAW,CACf,CAAC;QACJ;MACF,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZ1D,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEyD,GAAG,CAAC;QAC9CnF,eAAe,CAAC;UAAEvB,IAAI,EAAE,OAAO;UAAE+D,OAAO,EAAE;QAA+D,CAAC,CAAC;MAC7G,CAAC,SAAS;QACRtC,cAAc,CAAC,KAAK,CAAC;MACvB;IACF,CAAC;IAED8C,GAAG,CAACoC,OAAO,GAAG,MAAM;MAClBpF,eAAe,CAAC;QAAEvB,IAAI,EAAE,OAAO;QAAE+D,OAAO,EAAE;MAAwC,CAAC,CAAC;MACpFtC,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;;IAED;IACA8C,GAAG,CAACqC,IAAI,CAAC,MAAM,EAAE,8CAA8C,EAAE,IAAI,CAAC;IACtErC,GAAG,CAACsC,IAAI,CAACpC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACE3G,OAAA,CAAAE,SAAA;IAAA8I,QAAA,gBACEhJ,OAAA,CAACJ,iBAAiB;MAAAqJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrBpJ,OAAA,CAACG,aAAa;MAAA6I,QAAA,gBACZhJ,OAAA,CAACU,UAAU;QAAAsI,QAAA,gBACThJ,OAAA;UAAAgJ,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBpJ,OAAA,CAACH,aAAa;UAACwJ,EAAE,EAAC,GAAG;UAACC,IAAI,EAAC,kBAAkB;UAACC,OAAO,EAAC,WAAW;UAAAP,QAAA,EAAC;QAElE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAEbpJ,OAAA,CAACF,WAAW;QAAC0J,QAAQ;QAAAR,QAAA,gBACnBhJ,OAAA;UAAAgJ,QAAA,EAAI;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BpJ,OAAA;UAAAgJ,QAAA,EAAG;QAAmH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC1HpJ,OAAA;UAAAgJ,QAAA,EAAG;QAAuG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAE9GpJ,OAAA,CAACa,UAAU;UACTC,UAAU,EAAEA,UAAW;UACvB2I,UAAU,EAAElE,cAAe;UAC3BmE,WAAW,EAAEhE,eAAgB;UAC7BiE,MAAM,EAAEhE,UAAW;UACnBiE,OAAO,EAAEvD,iBAAkB;UAAA2C,QAAA,gBAE3BhJ,OAAA,CAACoB,UAAU;YAAA4H,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC3BpJ,OAAA;YAAAgJ,QAAA,EAAI;UAA2B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpCpJ,OAAA;YAAAgJ,QAAA,EAAG;UAAwB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC/BpJ,OAAA,CAACsB,SAAS;YACRY,IAAI,EAAC,MAAM;YACX2H,GAAG,EAAE3G,YAAa;YAClB4G,MAAM,EAAC,YAAY;YACnBC,QAAQ,EAAE5D;UAAsB;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,EACDhG,YAAY,iBACXpD,OAAA;YAAAgJ,QAAA,gBAAGhJ,OAAA;cAAAgJ,QAAA,EAAQ;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAChG,YAAY,CAAC8C,IAAI;UAAA;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAC1D;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACS,CAAC,EAEZ5F,YAAY,iBACXxD,OAAA,CAACiC,aAAa;UAACC,IAAI,EAAEsB,YAAY,CAACtB,IAAK;UAAA8G,QAAA,EACpCxF,YAAY,CAACyC;QAAO;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAChB,EAEA1F,WAAW,iBACV1D,OAAA,CAACyB,iBAAiB;UAAAuH,QAAA,gBAChBhJ,OAAA;YAAAgJ,QAAA,GAAG,aAAW,EAAC1F,cAAc,EAAC,GAAC;UAAA;YAAA2F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACnCpJ,OAAA,CAAC2B,WAAW;YAAAqH,QAAA,eACVhJ,OAAA,CAAC8B,YAAY;cAACC,QAAQ,EAAEuB;YAAe;cAAA2F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CACpB,eAEDpJ,OAAA,CAACH,aAAa;UACZ+J,OAAO,EAAEpD,YAAa;UACtBwD,QAAQ,EAAE,CAAC5G,YAAY,IAAIM,WAAY;UACvCuG,KAAK,EAAE;YAAEC,SAAS,EAAE;UAAO,CAAE;UAAAlB,QAAA,EAE5BtF,WAAW,GAAG,eAAe,GAAG;QAAa;UAAAuF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEdpJ,OAAA,CAACoC,iBAAiB;QAAA4G,QAAA,gBAChBhJ,OAAA;UAAAgJ,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAEtBxF,aAAa,CAACkC,MAAM,GAAG,CAAC,gBACvB9F,OAAA,CAACsC,YAAY;UAAA0G,QAAA,gBACXhJ,OAAA;YAAAgJ,QAAA,eACEhJ,OAAA;cAAAgJ,QAAA,gBACEhJ,OAAA;gBAAAgJ,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjBpJ,OAAA;gBAAAgJ,QAAA,EAAI;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpBpJ,OAAA;gBAAAgJ,QAAA,EAAI;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfpJ,OAAA;gBAAAgJ,QAAA,EAAI;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRpJ,OAAA;YAAAgJ,QAAA,EACGpF,aAAa,CAACY,GAAG,CAACsC,MAAM,iBACvB9G,OAAA;cAAAgJ,QAAA,gBACEhJ,OAAA;gBAAAgJ,QAAA,EAAKlC,MAAM,CAACnC;cAAQ;gBAAAsE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC1BpJ,OAAA;gBAAAgJ,QAAA,EAAKlC,MAAM,CAAClC;cAAS;gBAAAqE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3BpJ,OAAA;gBAAAgJ,QAAA,eACEhJ,OAAA,CAAC2C,WAAW;kBAACE,MAAM,EAAEiE,MAAM,CAACjE,MAAO;kBAAAmG,QAAA,EAChClC,MAAM,CAACjE,MAAM,CAACsH,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGtD,MAAM,CAACjE,MAAM,CAAC6F,KAAK,CAAC,CAAC;gBAAC;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpD;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ,CAAC,eACLpJ,OAAA;gBAAAgJ,QAAA,EAAKlC,MAAM,CAAC7B;cAAO;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GARlBtC,MAAM,CAACpC,EAAE;cAAAuE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASd,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,gBAEfpJ,OAAA;UAAAgJ,QAAA,EAAG;QAA4B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACnC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACgB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA,eAChB,CAAC;AAEP,CAAC;AAACpG,EAAA,CArSID,eAAe;EAAA,QACFrD,WAAW;AAAA;AAAA2K,IAAA,GADxBtH,eAAe;AAuSrB,eAAeA,eAAe;AAAC,IAAAtC,EAAA,EAAAG,GAAA,EAAAO,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,IAAA,EAAAK,IAAA,EAAAI,IAAA,EAAAuH,IAAA;AAAAC,YAAA,CAAA7J,EAAA;AAAA6J,YAAA,CAAA1J,GAAA;AAAA0J,YAAA,CAAAnJ,GAAA;AAAAmJ,YAAA,CAAAjJ,GAAA;AAAAiJ,YAAA,CAAA9I,GAAA;AAAA8I,YAAA,CAAA5I,GAAA;AAAA4I,YAAA,CAAAzI,GAAA;AAAAyI,YAAA,CAAAtI,GAAA;AAAAsI,YAAA,CAAAnI,GAAA;AAAAmI,YAAA,CAAAjI,IAAA;AAAAiI,YAAA,CAAA5H,IAAA;AAAA4H,YAAA,CAAAxH,IAAA;AAAAwH,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}